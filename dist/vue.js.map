{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/patch.js","../src/observer/dep.js","../src/until/until.js","../src/observer/schedular.js","../src/observer/watcher.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //{{}}\r\n\r\nfunction genProps(attrs){\r\n    let str=''\r\n    for(let i=0; i<attrs.length; i++){\r\n        let attr =attrs[i] //name value\r\n        if(attr.name==='style'){\r\n            let obj={}\r\n            attr.value.split(';').forEach(item => {\r\n             let [key,value]  = item.split(':');\r\n             obj[key]=value\r\n            });\r\n            attr.value=obj;//{style:{color:blue}}\r\n        }\r\n        str +=`${attr.name}:${JSON.stringify(attr.value)},`//{a:'aaa',a:1,b:2}\r\n    }\r\n    return` {${str.slice(0,-1)}}`\r\n}\r\n\r\n\r\nfunction genChildren(AST){\r\n    const children = AST.children;\r\n    if(children){\r\n        return children.map(child=>gen(child)).join(',')\r\n    }\r\n}\r\n\r\nfunction gen(node){//区分是元素还是文本\r\n    console.log(node)\r\n\r\n    if(node.type==1){\r\n        return generate(node)\r\n    }else{//文本逻辑不能用_c处理\r\n            //1.有{{}}  普通文本   混合文本 {{name}}  aaa {{age}} bbb\r\n        let text=node.text;\r\n        if(defaultTagRE.test(text)){//_v(_s(name)+_v('aa')\r\n            //说明是带有{{}}\r\n            let tokens =[];\r\n            let match;\r\n            let index=0;\r\n            let lastIndex=defaultTagRE.lastIndex =0;\r\n            while (match = defaultTagRE.exec(text)) {//{{name}}  aaa {{age}} bbb\r\n                index=match.index;\r\n                console.log(match)\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex=index + match[0].length;\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n\r\n        }else{\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n    }\r\n}\r\n\r\nexport function generate(AST){//转换成render代码\r\n    console.log(AST)\r\n\r\n    let children = genChildren(AST)\r\n\r\n    let code =`_c('${AST.tag}',${\r\n        AST.attrs.length? genProps(AST.attrs):'undefined'\r\n    }${\r\n        children?(',' + children) : ''\r\n    })`\r\n    console.log(code)\r\n\r\n    return code;\r\n    //进行语法转化  将html代码转化js代码  核心 字符串拼接\r\n}\r\n\r\n\r\n/* <div id=\"app\">\r\n    <div style=\"color:blue\">\r\n            <span>{{name}}</span>\r\n    </div>\r\n</div> \r\n变成render函数  reder函数执行后的结果是个虚拟dom\r\n\r\nrender(){ \r\n    return _c('div',{id:'app'}，\r\n    _c(\r\n        'div',\r\n        {style:{color:\"blue\"}},\r\n        _c(\r\n            'span',\r\n            {}\r\n            _s(_v\"name\")\r\n        )\r\n    )\r\n}\r\n\r\n*/","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配类标签名的  里面的\\\\相当于转译 变成一个\\\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //aa:aa\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //可以匹配到标签名\r\n\r\n//console.log(\"<div:aa>\".match(startTagOpen));\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //标签结束名字\r\n//console.log(\"</div:xxx>\".match(endTag));\r\n//style=\"xxx\"  style='xxx'  style=xxx\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n//console.log(`a='2'`.match(attribute));\r\n\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //{{}}\r\n\r\n\r\n  /* <div id=\"app\">\r\n    <div style=\"color:blue ;\">\r\n      <span>{{name}}</span>\r\n    </div>\r\n</div>\r\n  */\r\n\r\n//AST语法树  描述dom结构\r\n// {\r\n//     tag:'div',//根节点\r\n//     type:1, 元素是1  文本是3  约定俗成\r\n//     attrs:[{style:\"color:red\"}]\r\n//     children:[\r\n//         {\r\n//             tag:'span',\r\n//             type:1,\r\n//             attrs:[],//属性\r\n//             children,\r\n//             parent:\r\n//         }\r\n//     ],\r\n//     parent:null\r\n// }\r\n\r\n /* <div id=\"app\">\r\n        <div style=\"color:blue ;\">\r\n             <span>{{name}}</span>\r\n        </div>\r\n    </div>\r\n  */\r\n\r\nexport function parseHTML(html) {\r\n    function createASTElement(tag,attrs){//vue3中支持多个根元素(外层加了个空元素)，vue2中只有一个根节点\r\n        return{\r\n          tag,\r\n          type:1,\r\n          children:[],\r\n          attrs,\r\n          parent:null\r\n        }\r\n      }\r\n      \r\n      let root =null;\r\n      let currentParent;\r\n      let stack=[];\r\n\r\n\r\n  //根据开始标签  结束标签  文本内容  生成一个AST语法树\r\n    function start(tagName,attrs){\r\n      //console.log('start------',tagName)\r\n      let element =createASTElement(tagName,attrs)\r\n      if(!root){//如果没有根  说明就是第一个元素\r\n          root = element\r\n      }\r\n      currentParent = element;//div->span->a   \r\n      stack.push(element)\r\n\r\n    }\r\n\r\n    function end(tagName){\r\n      //console.log('end------',tagName)\r\n      let element=stack.pop()\r\n      currentParent=stack[stack.length-1]\r\n      if(currentParent){\r\n        element.parent=currentParent;\r\n        currentParent.children.push(element)\r\n      }\r\n    }\r\n    function chars(text){\r\n      //console.log('chars------',text)\r\n\r\n      //文本可能为空   源码里会将其变成一个空格   此处是移除所有空格  \r\n      text = text.replace(/\\s/g,'');\r\n      if(text){\r\n        currentParent.children.push({\r\n          type:3,\r\n          text\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    //截取\r\n    function advance(n){\r\n        html = html.substring(n)\r\n    }\r\n\r\n    function parseStartTag(){\r\n    const start = html.match(startTagOpen)\r\n    if(start){\r\n        let match ={\r\n            tagName:start[1],\r\n            attrs:[],\r\n        }\r\n        advance(start[0].length);//获取元素\r\n       console.log(html,match)\r\n       //查找属性\r\n       let end,attr;\r\n       //不是开头标签结尾 就一直解析\r\n       while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n            console.log(attr)\r\n            advance(attr[0].length)\r\n            match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n       }\r\n       if(end){\r\n        advance(end[0].length);\r\n        return match\r\n       }\r\n    }\r\n    }\r\n  //标签是以<>开头\r\n\r\n  while (html) {\r\n    let textEnd = html.indexOf('<');//判断 如果<的索引是0,就说明是一个元素 \r\n    if(textEnd == 0 ){\r\n       let startTagMatch = parseStartTag();\r\n       if(startTagMatch){//开始标签\r\n        // console.log(startTagMatch)\r\n        // console.log('开始',startTagMatch.tagName)\r\n        start(startTagMatch.tagName,startTagMatch.attrs)\r\n        continue;\r\n       }\r\n\r\n       //结束标签\r\n       let endTagMatch = html.match(endTag)\r\n       if(endTagMatch){\r\n        advance(endTagMatch[0].length)\r\n      //console.log('结尾',endTagMatch[1])\r\n       end(endTagMatch[1])\r\n\r\n        continue;\r\n       }\r\n       \r\n    }\r\n     /* \r\n\r\n        <div style=\"color:blue ;\">\r\n             <span>{{name}}</span>\r\n        </div>\r\n    </div>\r\n  */\r\n    let text;\r\n    if(textEnd > 0){//开始解析文本\r\n      text =html.substring(0,textEnd)\r\n\r\n    }\r\n    if(text){\r\n      advance(text.length);\r\n      //console.log('文本',text)\r\n      chars(text)\r\n\r\n      //console.log(text);\r\n\r\n    }\r\n\r\n  }\r\n  return root;\r\n}\r\n","import { generate } from \"./generate\";\r\nimport { parseHTML } from \"./parse\";\r\n\r\nexport function compileToFunctions(template) {\r\n  //1.先将模板变成AST抽象树  解析模板\r\n  let AST = parseHTML(template); //解析模板  原理是 每解析一块儿  就删掉一块 长度为0时  就意味着都解析完了\r\n  console.log(template);\r\n  // console.log(root);\r\n\r\n  //root  代码生成\r\n\r\n  let code = generate(AST);\r\n\r\n  let render = `with(this){return ${code}}`;\r\n  console.log(render)\r\n  let fn = new Function(render);\r\n  console.log(fn)\r\n  return fn\r\n\r\n\r\n}\r\n","\r\n\r\nexport function patch(oldVnode, Vnode) {\r\n    //oldVnode是一个真实额元素 (首次渲染)\r\n    //console.log(oldVnode, newVnode)\r\n    const isRealElement = oldVnode.nodeType\r\n\r\n    if (isRealElement) {\r\n        //初次渲染\r\n        const oldElm = oldVnode;//拿到 id=\"app\"\r\n        const parentElm = oldElm.parentNode;//拿到父元素 body\r\n\r\n        let el = createElm(Vnode)  //根据虚拟节点 创建出真实节点\r\n        parentElm.insertBefore(el, oldElm.nextSibling)//将创建的节点插到原有的节点的下一个\r\n        parentElm.removeChild(oldElm);\r\n\r\n        return el//vm.$el\r\n    } else {\r\n        //diff算法\r\n    }\r\n}\r\n\r\n\r\n//根据虚拟节点 创建出真实节点\r\nfunction createElm(vnode) {\r\n    let { vm, tag, data, key, children, text } = vnode\r\n    if (typeof tag === 'string') {//也可能是个组件 先不考虑\r\n        vnode.el = document.createElement(tag);//用vue的指令时，可以用过vnode拿到真实的dom  虚拟节点配合真实dom\r\n        //更新dom上的属性\r\n        updateProperties(vnode);\r\n\r\n        //有可能有儿子\r\n        children.forEach(child => {//可能有文本  可能有元素\r\n            //根据子节点 创建元素\r\n            vnode.el.appendChild(createElm(child))//递归创建\r\n\r\n        })\r\n    } else {//文本情况\r\n        vnode.el = document.createTextNode(text)\r\n\r\n    }\r\n\r\n    return vnode.el\r\n}\r\n\r\nfunction updateProperties(vnode) {\r\n    let newProps = vnode.data || {};//属性\r\n    let el = vnode.el//dom元素\r\n\r\n    for (let key in newProps) {\r\n        if (key == 'style') {\r\n            for (let styleName in newProps.style) {\r\n                el.style[styleName] = newProps.style[styleName]\r\n            }\r\n        } else if (key == 'class') {\r\n            el.className = newProps.class\r\n        } else {\r\n            el.setAttribute(key, newProps[key])\r\n\r\n        }\r\n    }\r\n}","//我们可以把当前watcher 放到一个全局变量上\r\nlet id = 0;//为了保持dep的唯一性\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++;\r\n        this.subs = [];//属性要记住watcher\r\n\r\n    }\r\n    depend() {\r\n        //让watcher记住dep\r\n        //获取watcher\r\n        Dep.target.addDep(this)//这里的this指的是Dep  name=>watcher  \r\n    }\r\n    //让dep记住watcher  \r\n    addSub(watcher) {//存储watcher\r\n        this.subs.push(watcher)\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update())\r\n    }\r\n}\r\nDep.target = null;//类的静态属性\r\n\r\n//收集依赖\r\nexport function pushTarget(watcher) {\r\n    Dep.watcher = watcher\r\n}\r\nexport function popTarget() {\r\n    Dep.target = null;\r\n}\r\n\r\n\r\n\r\nexport default Dep;","let callbacks = []\r\n\r\nfunction flushCallbacks() {\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        let callback = callbacks[i];\r\n        callback()\r\n    }       \r\n    waiting=false\r\n}\r\n//批处理  第一次开定时器  后续只更新列表  之后执行清空逻辑\r\n\r\n//第一次cb是渲染watcher  更新操作  (渲染watcher执行的过程肯定是同步的)\r\n//第二次的cb是用户传入的回调\r\nlet waiting = false; \r\nexport function nextTick(cb) {  \r\n    callbacks.push(cb)//目前默认的cb  是渲染逻辑  用户的逻辑放到渲染逻辑之后即可\r\n\r\n    if (!waiting) {\r\n        waiting = true\r\n        //vue2 做兼容性处理先判断是否支持Promise，如果不支持就采用MutationObserver()，然后是seImmediate（ie专用），最后是setTimeout，依次判断。\r\n\r\n\r\n        Promise.resolve().then(flushCallbacks)//多次调用nextTick 只会开启一个promise\r\n    }\r\n\r\n}\r\n\r\n\r\n//nextTick肯定有异步功能","import { nextTick } from \"../until/until\";\r\n\r\nlet has = {};\r\nlet queue = [];\r\n\r\n\r\nfunction flushSchedularQueue() {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        let watcher = queue[i]\r\n        watcher.run()\r\n    }\r\n    queue = []\r\n    has = {}\r\n    pending = false\r\n}\r\n\r\n\r\n//vue更新操作是异步操作\r\n//多次调用queueWatcher 如果watcher不是同一个\r\nlet pending = false\r\nexport function queueWatcher(watcher) {//调度更新几次\r\n    //更新时将watcher去重\r\n    let id = watcher.id;\r\n    if (has[id] == null) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        console.log(queue);\r\n        //让queue清空\r\n        if (!pending) {\r\n            pending = true\r\n            nextTick(flushSchedularQueue);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n}","import { popTarget, pushTarget } from \"./dep\";\r\nimport { queueWatcher } from \"./schedular\";\r\n\r\n//每个组件间有多个watcher  所以需要加一个唯一标识  \r\nlet id = 0;\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, cb, options) {\r\n        this.vm = vm;\r\n        this.cb = cb;\r\n        this.options = options;\r\n        this.id = id++\r\n        this.getter = exprOrFn\r\n        this.drps = [];\r\n        this.depsId = new Set();//去重  \r\n\r\n        this.get();//调用传入的函数 调用了render方法  此时会对模板中的数据进行取值\r\n    }\r\n    get() {//这个方法中会对属性进行取值操作\r\n        pushTarget(this)// 给Dep.target赋了值 =watcher\r\n        this.getter()//会取值  执行了observer中index.js中的54行 \r\n        popTarget();//Dep.target = null;\r\n    }\r\n    addDep(dep) {\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {//dep是非重复的\r\n            this.depsId.add(id)\r\n            this.deps.push(dep)\r\n            dep.addSub(this)\r\n        }\r\n    }\r\n    run() {\r\n        this.get();\r\n    }\r\n\r\n    update() {//如果多次更改，我希望合并一次  (可以看成防抖)\r\n       // this.get()//不停地重新渲染\r\n        console.log(this)//此处this指向watcher\r\n        queueWatcher(this)//此时可能有重复的\r\n    }\r\n    //当属性取值时  需要记住这个watcher，稍后变化了  去执行自己记住的watcher即可     依赖收集\r\n}\r\n\r\n\r\nexport default Watcher;","import { patch } from \"./vdom/patch\";\r\nimport Watcher from \"./observer/watcher\"\r\n//渲染成真实DOM的\r\nexport function lifecycleMixin(Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        // console.log('update', vnode);\r\n        //将虚拟节点转换成真实dom\r\n        const vm = this;\r\n\r\n        console.log(vm.$options.el,vnode)\r\n        //首次渲染 需要用虚拟节点 来更新真实的dom元素\r\n        //初始化渲染的时候 会创建一个新节点 并且将老节点删掉\r\n\r\n        //第一次渲染完毕后 拿到新的节点 下次再次渲染时替换上次渲染的结果\r\n        vm.$options.el = patch(vm.$options.el, vnode);\r\n    }\r\n}\r\n\r\n\r\nexport function mountComponent(vm, el) {\r\n    console.log(vm, el)\r\n\r\n    //Vue渲染机制\r\n    //Vue默认通过watcher来进行渲染的 = 渲染watcher(每一个组件都有一个渲染watcher)\r\n\r\n    let updateComponent = () => {\r\n        //调用runder方法\r\n        vm._update(vm._render());//返回的是虚拟节点   是一个对象 vm._update是将虚拟节点转化为真实节点\r\n    }\r\n    //让实例的某某方法执行  四个参数   后面加true是为了表明 该watcher是一个渲染watcher\r\n    new Watcher(vm, updateComponent, () => { }, true) //这句话就是相当于让 updateComponent 执行 updateComponent();\r\n\r\n\r\n}","//首先  我需要拿到原来数组原型上的方法  天生自带的方法\r\nlet oldArrayProtoMethods = Array.prototype;\r\n\r\n//不能直接改写数组原有方法  不可靠  因为只有在vue data中定义的数组才需要改写\r\n\r\n//创建一个元素  让他指向原型   继承关系\r\nexport let arrayMethods = Object.create(Array.prototype);\r\n\r\n//因为他指向数组原型链 所以 就可以拿到原型链上的方法\r\n//arrayMethods.push===arrayMethods._proto_.push\r\n\r\n//对数组方法进行重写  一般对改变原数组的操作进行重写\r\n\r\nlet methods = [\r\n    \"push\", \r\n    \"pop\", \r\n    \"shift\", \r\n    \"unshift\", \r\n    \"splice\", \r\n    \"reverse\", \r\n    \"sort\"\r\n];\r\n//如果用户调用arrayMethods.push方法，会调取我重写后的 也就是下面这一坨\r\n\r\nmethods.forEach((methods) => {//AOP切片编程   把原有的逻辑 割一刀 插入自己的逻辑\r\n  arrayMethods[methods] = function (...args) {//重写数组方法\r\n        //做些自己的事儿 \r\n    console.log('数组变化')\r\n    let result = oldArrayProtoMethods[methods].call(this,...args);//这里的this指向arrayMethods\r\n    \r\n    \r\n    //有可能用户后增加的数据是对象格式，也需要进项拦截\r\n    //做个判断  只对数组增加的方法进行判断\r\n    let inserted;\r\n    let ob=this.__ob__;\r\n    switch (methods) {\r\n        case 'push':\r\n        case 'unshift':\r\n            inserted=args;\r\n            break;\r\n            case 'splice'://splice(0,1,xxxx) \r\n            //因为splice方法第三个才是新增的   \r\n            inserted=args.slice(2);\r\n        default:\r\n            break;\r\n    }\r\n\r\n   if(inserted){//如果有值 都需要调observeArray()  这里的this指向调用者 this.__ob__.observeArray(inserted) \r\n       ob.observeArray(inserted)\r\n      \r\n      }\r\n      ob.dep.notify()\r\n    return result\r\n  };\r\n});\r\n","import { arrayMethods } from \"./array\";\r\nimport Dep from \"./dep\";\r\n//对数组和对象进行拦截\r\nclass Observer {\r\n  constructor(value) {\r\n    //需要对val属性重新定义\r\n\r\n    //value可能是对象 可能是数组，分类处理    数组不用defineProperty拦截\r\n\r\n    //增加一个自定义属性\r\n    //value.__ob__=this;\r\n\r\n    this.dep = new Dep();//给数组本身和对象本身增加一个dep属性\r\n    Object.defineProperty(value, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, //不能被枚举 表示  不能被循环\r\n      configurable: false, //不能删除此属性\r\n    });\r\n\r\n    if (Array.isArray(value)) {\r\n      //数组不用defineProperty拦截  性能不好\r\n      //操作数组方法  push  shift  sort   我需要重写这些方法(一共7个)  增加更新逻辑\r\n      //当是数组时  改写方法为自己重写后的方法\r\n      Object.setPrototypeOf(value, arrayMethods); // 等价于value._proto_ = arrayMethods;\r\n\r\n      //观测数组中的每一项\r\n      this.observeArray(value); //处理原有数组中的对象  Object.freeze()冻结  冻结就不能被重写get和set了\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n  //监测数组变化\r\n  observeArray(value) {\r\n    //拿到数组每一项\r\n    for (let i = 0; i < value.length; i++) {//如果数组中是对象的话  就会去递归观测  观测对的时候会增加__ob__属性\r\n      observe(value[i]);\r\n    }\r\n  }\r\n  //监测对象变化，类方便拓展 可直接在下面写方法 无需拆分 还是一个整体\r\n  walk(data) {\r\n    //将对象中所有的key 重新用defineProperty定义成响应式数据\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\nfunction dependArray(value) {//该方法就是让里层数组收集外层数组的依赖，这样修改里层数也可以更新视图\r\n  for (let i = 0; i < value.length; i++){\r\n    let current = value[i];\r\n    current.__obj__ && current.__obj__.dep.depend()//让里层的和外层的 收集的都是用一个watcher\r\n    if (Array.isArray(current)) {\r\n      dependArray(current)\r\n    }\r\n  }\r\n}\r\n\r\n export function defineReactive(data, key, value) {\r\n  console.log(value,'444')\r\n  //vue2中数据嵌套不要过深，过深浪费性能\r\n\r\n  //value的值可能是个对象\r\n let childOb= observe(value); //对结果进行递归拦截\r\n  //console.log(childOb.dep)\r\n  //defineProperty是重写了get，set方法，而proxy是设置一个代理  不用改写原对象\r\n  let dep = new Dep//观察者模式  每次都会给属性创建个dep\r\n  Object.defineProperty(data, key, {//需要给每个属性都增加个dep\r\n    get() {\r\n      if (Dep.target) {\r\n        dep.depend();//让这个属性自己的dep记住这个watcher  也会让watcher记住这个dep   一个双向的过程\r\n        //childOb有可能是对象  有可能是数组\r\n        if (childOb) {//如果对数组取值 会将当前的watcher和数组进行关联\r\n          childOb.dep.depend();\r\n          if (Array.isArray(value)) {\r\n            dependArray(value)\r\n          }\r\n        }\r\n      } \r\n      console.log(key)\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      observe(value); //如果用户设置的是一个对象，就继续将用户设置的对象变为响应式的\r\n      value = newValue;\r\n\r\n      dep.notify()//通知dep中记录的watcher让它去执行\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  //console.log(data, \"----------\");\r\n  //只对对象类型进行观测，非对象类型无法观测\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return;\r\n  }\r\n  if (data.__obj__) {\r\n    //入果有__obj__就说明该属性被观测过了  就直接返回  防止循环引用\r\n    return;\r\n  }\r\n\r\n  //通过类来实现对数据的观测   类可以方便扩展  会产生实例  实例可作为唯一标识\r\n  return new Observer(data);\r\n}\r\n","import { observe } from \"./observer/index.js\";\r\n\r\n\r\n//初始化状态函数中，主要是针对不同情况做不同的初始化。\r\n//例如传入data，传入props，传入methods等等，需要分别初始化。\r\n\r\n\r\n\r\n//vue的数据   data props computed  watch...\r\nexport function initState(vm) {\r\n  //将所有数据都定义在vm属性上，并且后续更改需要触发视图更新\r\n  //拿到用户定义的参数 如data methods等\r\n  const opts = vm.$options; //获取用户属性\r\n\r\n  //   if (opts.props) {\r\n\r\n  //   }\r\n  //   if (opts.methods) {\r\n\r\n  //   }\r\n  //   if (opts.data) {//数据的初始化\r\n\r\n  //   }\r\n  //   if (opts.computed) {\r\n\r\n  //   }\r\n  //   if (opts.watch) {\r\n\r\n  //   }\r\n\r\n  if (opts.data) {\r\n    //数据的初始化\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\n//一层套一层  粒度会越来越小\r\nfunction initData(vm) {\r\n  //console.log(vm);\r\n  //进行数据劫持  Object.defineProperty\r\n  //拿到用户传来的数据\r\n  let data = vm.$options.data; //拿到的data有两种情况  一种是对象，一种是函数 根实例可以是对象，可以是函数，组件中data必须是函数\r\n  //对data类型进行判断  如果是函数  获取函数返回值作为对象\r\n  //用call是为了保证date中如果写了this  保证this永远指向当前的实例\r\n  data = vm._data = typeof data === \"function\" ? data.call(vm) : data;\r\n\r\n  //通过vm._data获取劫持后的数据，用户就可以拿到_data\r\n\r\n  //data = vm._data = typeof data === \"functions\" ? data.call(vm) : data;这样很麻烦   所以就需要代理\r\n\r\n  //将_data中的数据全部放到vm上\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key); //如果用户使用  vm.name 等价于 vm._data.name\r\n  }\r\n\r\n  //观测这个数据    Vue响应式的核心方法\r\n  observe(data);\r\n}\r\n","import { compileToFunctions } from \"./compiler/index\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { nextTick } from \"./until/until\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    //console.log(options);\r\n    const vm = this;\r\n    vm.$options = options; //在实例上有个属性$options 表示的是用户传入的所有属性\r\n\r\n    //初始化状态   可能初始化很多东西 逻辑很多  一个功能写一个方法\r\n    initState(vm);\r\n\r\n    if (vm.$options.el) {\r\n      //说明数据可以挂载到页面上\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n  Vue.prototype.$nextTick =nextTick\r\n  Vue.prototype.$mount = function (el) {\r\n    el = document.querySelector(el);\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    vm.$options.el = el;//id=\"app\"\r\n    //如果有render直接使用render即可，没有render看有没有template属性，没有template就接着找外部模板\r\n    if (!options.render) {\r\n      let template = options.template;\r\n      if (!template && el) {\r\n        template = el.outerHTML; //火狐不兼容 document.createElement('div').appendChild('app').innerHTML\r\n      }\r\n\r\n      console.log(template);\r\n\r\n      //如何将模板编译成render函数\r\n      const render = compileToFunctions(template); //将模板编译成一个函数\r\n      options.render = render;\r\n    }\r\n\r\n    mountComponent(vm, el) //组件挂载  \r\n\r\n  };\r\n\r\n\r\n  //   Vue.prototype.$mount = function (el){\r\n  //     el =document.querySelector(el);\r\n  //     const vm =this;\r\n  //     const options = vm.$options\r\n  // //如果有render直接使用render即可，没有render看有没有template属性，没有template就接着找外部模板\r\n  //     if(!options.render){\r\n  //       let template = options.template;\r\n  //       if(!template && el){\r\n  //         template = el.outHTML\r\n  //       }\r\n  //       console.log(template)\r\n  //     }\r\n  //   }\r\n}\r\n//vue的数据   data props computed  watch...\r\n// export function initState(vm) {\r\n//   //将所有数据都定义在vm属性上，并且后续更改需要触发视图更新\r\n//   //拿到用户定义的参数 如data methods等\r\n//   const opts = vm.$options; //获取用户属性\r\n\r\n//     if (opts.props) {\r\n\r\n//     }\r\n//     if (opts.methods) {\r\n\r\n//     }\r\n//     if (opts.data) {//数据的初始化\r\n\r\n//     }\r\n//     if (opts.computed) {\r\n\r\n//     }\r\n//     if (opts.watch) {\r\n\r\n//     }\r\n\r\n//   if (opts.data) {//数据的初始化\r\n//     initState(vm);\r\n//   }\r\n// }\r\n\r\n// //一层套一层  粒度会越来越小\r\n// function initData(vm) {\r\n\r\n// }\r\n","//导出 创建元素虚拟节点\r\nexport function createElement(vm, tag, data = {}, ...children) {\r\n    return vnode(vm, tag, data, data.key, children, undefined);\r\n}\r\n//导出创建文本虚拟节点\r\nexport function createTextVnode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\n//vue底层用的是个类 这里用个方法\r\nfunction vnode(vm, tag, data, key, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        children,\r\n        data,\r\n        key,\r\n        text,\r\n\r\n    }\r\n}\r\n//vnode(虚拟DOM)和AST(抽象树)  vnode 可以随意添加属性  AST是针对语法解析出来的结构不能添加不存在的属性","import { createElement, createTextVnode } from \"./vdom/index\"\r\n\r\nexport function renderMixin(Vue) {\r\n    //创建元素的虚拟节点\r\n    Vue.prototype._c = function (...args) {\r\n        return createElement(this, ...args)//可以多传参数\r\n    }\r\n    //创建文本的虚拟节点\r\n    Vue.prototype._v = function (text) {\r\n        return createTextVnode(this, text)\r\n    }\r\n    //转化成字符串\r\n    Vue.prototype._s = function (val) {\r\n        return val == null ? '' : (typeof val == 'object') ? JSON.stringify(val) : val\r\n    }\r\n\r\n    //调用自定义render方法\r\n    Vue.prototype._render = function () {\r\n        //render\r\n        //console.log('render')\r\n        const vm = this;\r\n        let render = vm.$options.render//获取编译后额render方法\r\n        //调用render方法 产生虚拟节点 让render执行\r\n        //render中有很多自定义的方法  如_c  _v  所以 会报错 \r\n        let vnode = render.call(vm)//_c(xxx，xxx)  调用时会自动将变量进行取值，将实例结果进行渲染\r\n\r\n        return vnode;//虚拟节点\r\n    }\r\n}","//Vue2.0中就是一个构造函数 如果用class(类)的话  \r\n\r\nimport { initMixin } from \"./init\";\r\nimport { lifecycleMixin } from \"./lifecycle\";\r\nimport { renderMixin } from \"./render\";\r\n\r\n// class Vue{\r\n//     a(){}\r\n//     b(){}\r\n//     c(){}\r\n// }\r\n\r\n\r\n//构造函数\r\nfunction Vue(options) {\r\n    console.log(options)\r\n    this._init(options)//当用户new Vue时就调用init方法进行vue的初始化方法\r\n}\r\n\r\n//Vue初始化  扩展原型方法\r\n// 将initMixin引入，并将Vue传过去，相当于扩展了init方法\r\n//可以拆分逻辑到不同的文件中 更利于代码维护  模块化的概念\r\ninitMixin(Vue);//初始化混合\r\n\r\n// Vue.prototype._init = function (options) {\r\n\r\n// };\r\nlifecycleMixin(Vue);//更新逻辑   扩展_update方法\r\nrenderMixin(Vue);//调用render方法的逻辑 扩展_render方法\r\n\r\n\r\nexport default Vue\r\n\r\n\r\n//库->rollup   项目开发->webpack"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","obj","value","split","forEach","item","key","JSON","stringify","slice","genChildren","AST","children","map","child","gen","join","node","console","log","type","generate","text","test","tokens","match","index","lastIndex","exec","push","trim","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","parent","root","currentParent","stack","start","tagName","element","end","pop","chars","replace","advance","n","substring","parseStartTag","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","template","render","fn","Function","patch","oldVnode","Vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","el","createElm","insertBefore","nextSibling","removeChild","vnode","vm","data","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","callbacks","flushCallbacks","callback","waiting","nextTick","cb","Promise","resolve","then","has","queue","flushSchedularQueue","run","pending","queueWatcher","Watcher","exprOrFn","options","getter","drps","depsId","Set","get","dep","add","deps","addSub","lifecycleMixin","Vue","prototype","_update","$options","mountComponent","updateComponent","_render","oldArrayProtoMethods","Array","arrayMethods","Object","create","methods","args","result","call","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","configurable","isArray","setPrototypeOf","walk","observe","keys","defineReactive","dependArray","current","__obj__","depend","childOb","set","newValue","initState","opts","initData","proxy","source","_data","initMixin","_init","$mount","$nextTick","querySelector","outerHTML","undefined","createTextVnode","renderMixin","_c","_v","_s","val"],"mappings":"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"}