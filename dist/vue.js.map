{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //{{}}\r\n\r\nfunction genProps(attrs){\r\n    let str=''\r\n    for(let i=0; i<attrs.length; i++){\r\n        let attr =attrs[i] //name value\r\n        if(attr.name==='style'){\r\n            let obj={}\r\n            attr.value.split(';').forEach(item => {\r\n             let [key,value]  = item.split(':');\r\n             obj[key]=value\r\n            });\r\n            attr.value=obj;//{style:{color:blue}}\r\n        }\r\n        str +=`${attr.name}:${JSON.stringify(attr.value)},`//{a:'aaa',a:1,b:2}\r\n    }\r\n    return` {${str.slice(0,-1)}}`\r\n}\r\n\r\n\r\nfunction genChildren(AST){\r\n    const children = AST.children;\r\n    if(children){\r\n        return children.map(child=>gen(child)).join(',')\r\n    }\r\n}\r\n\r\nfunction gen(node){//区分是元素还是文本\r\n    console.log(node)\r\n\r\n    if(node.type==1){\r\n        return generate(node)\r\n    }else{//文本逻辑不能用_c处理\r\n            //1.有{{}}  普通文本   混合文本 {{name}}  aaa {{age}} bbb\r\n        let text=node.text;\r\n        if(defaultTagRE.test(text)){//_v(_s(name)+_v('aa')\r\n            //说明是带有{{}}\r\n            let tokens =[];\r\n            let match;\r\n            let index=0;\r\n            let lastIndex=defaultTagRE.lastIndex =0;\r\n            while (match = defaultTagRE.exec(text)) {//{{name}}  aaa {{age}} bbb\r\n                index=match.index;\r\n                console.log(match)\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex=index + match[0].length;\r\n            }\r\n            if(lastIndex < text.length){\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n\r\n        }else{\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n    }\r\n}\r\n\r\nexport function generate(AST){//转换成render代码\r\n    console.log(AST)\r\n\r\n    let children = genChildren(AST)\r\n\r\n    let code =`_c('${AST.tag}',${\r\n        AST.attrs.length? genProps(AST.attrs):'undefined'\r\n    }${\r\n        children?(',' + children) : ''\r\n    })`\r\n    console.log(code)\r\n\r\n    return code;\r\n    //进行语法转化  将html代码转化js代码  核心 字符串拼接\r\n}\r\n\r\n\r\n/* <div id=\"app\">\r\n    <div style=\"color:blue\">\r\n            <span>{{name}}</span>\r\n    </div>\r\n</div> \r\n变成render函数  reder函数执行后的结果是个虚拟dom\r\n\r\nrender(){ \r\n    return _c('div',{id:'app'}，\r\n    _c(\r\n        'div',\r\n        {style:{color:\"blue\"}},\r\n        _c(\r\n            'span',\r\n            {}\r\n            _s(_v\"name\")\r\n        )\r\n    )\r\n}\r\n\r\n*/","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配类标签名的  里面的\\\\相当于转译 变成一个\\\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //aa:aa\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); //可以匹配到标签名\r\n\r\n//console.log(\"<div:aa>\".match(startTagOpen));\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); //标签结束名字\r\n//console.log(\"</div:xxx>\".match(endTag));\r\n//style=\"xxx\"  style='xxx'  style=xxx\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n//console.log(`a='2'`.match(attribute));\r\n\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //{{}}\r\n\r\n\r\n  /* <div id=\"app\">\r\n    <div style=\"color:blue ;\">\r\n      <span>{{name}}</span>\r\n    </div>\r\n</div>\r\n  */\r\n\r\n//AST语法树  描述dom结构\r\n// {\r\n//     tag:'div',//根节点\r\n//     type:1, 元素是1  文本是3  约定俗成\r\n//     attrs:[{style:\"color:red\"}]\r\n//     children:[\r\n//         {\r\n//             tag:'span',\r\n//             type:1,\r\n//             attrs:[],//属性\r\n//             children,\r\n//             parent:\r\n//         }\r\n//     ],\r\n//     parent:null\r\n// }\r\n\r\n /* <div id=\"app\">\r\n        <div style=\"color:blue ;\">\r\n             <span>{{name}}</span>\r\n        </div>\r\n    </div>\r\n  */\r\n\r\nexport function parseHTML(html) {\r\n    function createASTElement(tag,attrs){//vue3中支持多个根元素(外层加了个空元素)，vue2中只有一个根节点\r\n        return{\r\n          tag,\r\n          type:1,\r\n          children:[],\r\n          attrs,\r\n          parent:null\r\n        }\r\n      }\r\n      \r\n      let root =null;\r\n      let currentParent;\r\n      let stack=[];\r\n\r\n\r\n  //根据开始标签  结束标签  文本内容  生成一个AST语法树\r\n    function start(tagName,attrs){\r\n      //console.log('start------',tagName)\r\n      let element =createASTElement(tagName,attrs)\r\n      if(!root){//如果没有根  说明就是第一个元素\r\n          root = element\r\n      }\r\n      currentParent = element;//div->span->a   \r\n      stack.push(element)\r\n\r\n    }\r\n\r\n    function end(tagName){\r\n      //console.log('end------',tagName)\r\n      let element=stack.pop()\r\n      currentParent=stack[stack.length-1]\r\n      if(currentParent){\r\n        element.parent=currentParent;\r\n        currentParent.children.push(element)\r\n      }\r\n    }\r\n    function chars(text){\r\n      //console.log('chars------',text)\r\n\r\n      //文本可能为空   源码里会将其变成一个空格   此处是移除所有空格  \r\n      text = text.replace(/\\s/g,'');\r\n      if(text){\r\n        currentParent.children.push({\r\n          type:3,\r\n          text\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    //截取\r\n    function advance(n){\r\n        html = html.substring(n)\r\n    }\r\n\r\n    function parseStartTag(){\r\n    const start = html.match(startTagOpen)\r\n    if(start){\r\n        let match ={\r\n            tagName:start[1],\r\n            attrs:[],\r\n        }\r\n        advance(start[0].length);//获取元素\r\n       console.log(html,match)\r\n       //查找属性\r\n       let end,attr;\r\n       //不是开头标签结尾 就一直解析\r\n       while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n            console.log(attr)\r\n            advance(attr[0].length)\r\n            match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n       }\r\n       if(end){\r\n        advance(end[0].length);\r\n        return match\r\n       }\r\n    }\r\n    }\r\n  //标签是以<>开头\r\n\r\n  while (html) {\r\n    let textEnd = html.indexOf('<');//判断 如果<的索引是0,就说明是一个元素 \r\n    if(textEnd == 0 ){\r\n       let startTagMatch = parseStartTag();\r\n       if(startTagMatch){//开始标签\r\n        // console.log(startTagMatch)\r\n        // console.log('开始',startTagMatch.tagName)\r\n        start(startTagMatch.tagName,startTagMatch.attrs)\r\n        continue;\r\n       }\r\n\r\n       //结束标签\r\n       let endTagMatch = html.match(endTag)\r\n       if(endTagMatch){\r\n        advance(endTagMatch[0].length)\r\n      //console.log('结尾',endTagMatch[1])\r\n       end(endTagMatch[1])\r\n\r\n        continue;\r\n       }\r\n       \r\n    }\r\n     /* \r\n\r\n        <div style=\"color:blue ;\">\r\n             <span>{{name}}</span>\r\n        </div>\r\n    </div>\r\n  */\r\n    let text;\r\n    if(textEnd > 0){//开始解析文本\r\n      text =html.substring(0,textEnd)\r\n\r\n    }\r\n    if(text){\r\n      advance(text.length);\r\n      //console.log('文本',text)\r\n      chars(text)\r\n\r\n      //console.log(text);\r\n\r\n    }\r\n\r\n  }\r\n  return root;\r\n}\r\n","import { generate } from \"./generate\";\r\nimport { parseHTML } from \"./parse\";\r\n\r\nexport function compileToFunctions(template) {\r\n  //1.先将模板变成AST抽象树  解析模板\r\n  let AST = parseHTML(template); //解析模板  原理是 每解析一块儿  就删掉一块 长度为0时  就意味着都解析完了\r\n  console.log(template);\r\n  // console.log(root);\r\n\r\n  //root  代码生成\r\n\r\n  let code = generate(AST);\r\n\r\nlet render = `with(this){return ${code}}`;\r\nconsole.log(render)\r\nlet fn = new Function(render);\r\nconsole.log(fn)\r\nreturn fn\r\n\r\n\r\n}\r\n","//首先  我需要拿到原来数组原型上的方法  天生自带的方法\r\nlet oldArrayProtoMethods = Array.prototype;\r\n\r\n//不能直接改写数组原有方法  不可靠  因为只有在vue data中定义的数组才需要改写\r\n\r\n//创建一个元素  让他指向原型   继承关系\r\nexport let arrayMethods = Object.create(Array.prototype);\r\n\r\n//因为他指向数组原型链 所以 就可以拿到原型链上的方法\r\n//arrayMethods.push===arrayMethods._proto_.push\r\n\r\n//对数组方法进行重写  一般对改变原数组的操作进行重写\r\n\r\nlet methods = [\r\n    \"push\", \r\n    \"pop\", \r\n    \"shift\", \r\n    \"unshift\", \r\n    \"splice\", \r\n    \"reverse\", \r\n    \"sort\"\r\n];\r\n//如果用户调用arrayMethods.push方法，会调取我重写后的 也就是下面这一坨\r\n\r\nmethods.forEach((methods) => {//AOP切片编程   把原有的逻辑 割一刀 插入自己的逻辑\r\n  arrayMethods[methods] = function (...args) {//重写数组方法\r\n        //做些自己的事儿 \r\n    console.log('数组变化')\r\n    let result = oldArrayProtoMethods[methods].call(this,...args);//这里的this指向arrayMethods\r\n    \r\n    \r\n    //有可能用户后增加的数据是对象格式，也需要进项拦截\r\n    //做个判断  只对数组增加的方法进行判断\r\n    let inserted;\r\n    let ob=this.__ob__;\r\n    switch (methods) {\r\n        case 'push':\r\n        case 'unshift':\r\n            inserted=args;\r\n            break;\r\n            case 'splice'://splice(0,1,xxxx) \r\n            //因为splice方法第三个才是新增的   \r\n            inserted=args.slice(2);\r\n        default:\r\n            break;\r\n    }\r\n\r\n   if(inserted){//如果有值 都需要调observeArray()  这里的this指向调用者 this.__ob__.observeArray(inserted) \r\n    ob.observeArray(inserted)\r\n   }\r\n    return result\r\n  };\r\n});\r\n","import { arrayMethods } from \"./array\";\r\n//对数组和对象进行拦截\r\nclass Observer {\r\n  constructor(value) {\r\n    //需要对val属性重新定义\r\n\r\n    //value可能是对象 可能是数组，分类处理    数组不用defineProperty拦截\r\n\r\n    //增加一个自定义属性\r\n    //value.__ob__=this;\r\n    Object.defineProperty(value, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false, //不能被枚举 表示  不能被循环\r\n      configurable: false, //不能删除此属性\r\n    });\r\n\r\n    if (Array.isArray(value)) {\r\n      //数组不用defineProperty拦截  性能不好\r\n      //操作数组方法  push  shift  sort   我需要重写这些方法(一共7个)  增加更新逻辑\r\n      //当是数组时  改写方法为自己重写后的方法\r\n      Object.setPrototypeOf(value, arrayMethods); // 等价于value._proto_ = arrayMethods;\r\n\r\n      //观测数组中的每一项\r\n      this.observeArray(value); //处理原有数组中的对象  Object.freeze()冻结  冻结就不能被重写get和set了\r\n    } else {\r\n      this.walk(value);\r\n    }\r\n  }\r\n  //监测数组变化\r\n  observeArray(value) {\r\n    //拿到数组每一项\r\n    for (let i = 0; i < value.length; i++) {\r\n      observe(value[i]);\r\n    }\r\n  }\r\n  //监测对象变化，类方便拓展 可直接在下面写方法 无需拆分 还是一个整体\r\n  walk(data) {\r\n    //将对象中所有的key 重新用defineProperty定义成响应式数据\r\n    Object.keys(data).forEach((key) => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  //vue2中数据嵌套不要过深，过深浪费性能\r\n\r\n  //value的值可能是个对象\r\n  observe(value); //对结果进行递归拦截\r\n\r\n  //defineProperty是重写了get，set方法，而proxy是设置一个代理  不用改写原对象\r\n\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return;\r\n      observe(value); //如果用户设置的是一个对象，就继续将用户设置的对象变为响应式的\r\n      value = newValue;\r\n    },\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  //console.log(data, \"----------\");\r\n  //只对对象类型进行观测，非对象类型无法观测\r\n  if (typeof data !== \"object\" || data == null) {\r\n    return;\r\n  }\r\n  if (data.__obj__) {\r\n    //入果有__obj__就说明该属性被观测过了  就直接返回  防止循环引用\r\n    return;\r\n  }\r\n\r\n  //通过类来实现对数据的观测   类可以方便扩展  会产生实例  实例可作为唯一标识\r\n  return new Observer(data);\r\n}\r\n","import { observe } from \"./observer/index.js\";\r\n\r\n//vue的数据   data props computed  watch...\r\nexport function initState(vm) {\r\n  //将所有数据都定义在vm属性上，并且后续更改需要触发视图更新\r\n  //拿到用户定义的参数 如data methods等\r\n  const opts = vm.$options; //获取用户属性\r\n\r\n  //   if (opts.props) {\r\n\r\n  //   }\r\n  //   if (opts.methods) {\r\n\r\n  //   }\r\n  //   if (opts.data) {//数据的初始化\r\n\r\n  //   }\r\n  //   if (opts.computed) {\r\n\r\n  //   }\r\n  //   if (opts.watch) {\r\n\r\n  //   }\r\n\r\n  if (opts.data) {\r\n    //数据的初始化\r\n    initData(vm);\r\n  }\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    },\r\n  });\r\n}\r\n\r\n//一层套一层  粒度会越来越小\r\nfunction initData(vm) {\r\n  //console.log(vm);\r\n  //进行数据劫持  Object.defineProperty\r\n  //拿到用户传来的数据\r\n  let data = vm.$options.data; //拿到的data有两种情况  一种是对象，一种是函数\r\n  //对data类型进行判断  如果是函数  获取函数返回值作为对象\r\n  //用call是为了保证date中如果写了this  保证this永远指向当前的实例\r\n  data = vm._data = typeof data === \"function\" ? data.call(vm) : data;\r\n\r\n  //通过vm._data获取劫持后的数据，用户就可以拿到_data\r\n\r\n  //data = vm._data = typeof data === \"functions\" ? data.call(vm) : data;这样很麻烦   所以就需要代理\r\n\r\n  //将_data中的数据全部放到vm上\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key); //如果用户使用  vm.name 等价于 vm._data.name\r\n  }\r\n\r\n  //观测这个数据    Vue响应式的核心方法\r\n  observe(data);\r\n}\r\n","import { compileToFunctions } from \"./compiler/index\";\r\nimport { initState } from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    //console.log(options);\r\n    const vm = this;\r\n    vm.$options = options; //在实例上有个属性$options 表示的是用户传入的所有属性\r\n\r\n    //初始化状态   可能初始化很多东西 逻辑很多  一个功能写一个方法\r\n    initState(vm);\r\n\r\n    if (vm.$options.el) {\r\n      //说明数据可以挂载到页面上\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n  \r\n  Vue.prototype.$mount = function (el) {\r\n    el = document.querySelector(el);\r\n    const vm = this;\r\n    const options = vm.$options;\r\n   \r\n    //如果有render直接使用render即可，没有render看有没有template属性，没有template就接着找外部模板\r\n    if (!options.render) {\r\n      let template = options.template;\r\n      if (!template && el) {\r\n        template = el.outerHTML; //火狐不兼容 document.createElement('div').appendChild('app').innerHTML\r\n      }\r\n      \r\n      console.log(template);\r\n\r\n      //如何将模板编译成render函数\r\n      const render = compileToFunctions(template); //将模板编译成一个函数\r\n      options.render = render;\r\n    }\r\n  };\r\n\r\n\r\n//   Vue.prototype.$mount = function (el){\r\n//     el =document.querySelector(el);\r\n//     const vm =this;\r\n//     const options = vm.$options\r\n// //如果有render直接使用render即可，没有render看有没有template属性，没有template就接着找外部模板\r\n//     if(!options.render){\r\n//       let template = options.template;\r\n//       if(!template && el){\r\n//         template = el.outHTML\r\n//       }\r\n//       console.log(template)\r\n//     }\r\n//   }\r\n}\r\n//vue的数据   data props computed  watch...\r\n// export function initState(vm) {\r\n//   //将所有数据都定义在vm属性上，并且后续更改需要触发视图更新\r\n//   //拿到用户定义的参数 如data methods等\r\n//   const opts = vm.$options; //获取用户属性\r\n\r\n//     if (opts.props) {\r\n\r\n//     }\r\n//     if (opts.methods) {\r\n\r\n//     }\r\n//     if (opts.data) {//数据的初始化\r\n\r\n//     }\r\n//     if (opts.computed) {\r\n\r\n//     }\r\n//     if (opts.watch) {\r\n\r\n//     }\r\n\r\n//   if (opts.data) {//数据的初始化\r\n//     initState(vm);\r\n//   }\r\n// }\r\n\r\n// //一层套一层  粒度会越来越小\r\n// function initData(vm) {\r\n\r\n// }\r\n","//Vue2.0中就是一个构造函数 如果用class(类)的话  \r\n\r\nimport { initMixin } from \"./init\";\r\n\r\n// class Vue{\r\n//     a(){}\r\n//     b(){}\r\n//     c(){}\r\n// }\r\n\r\n\r\n//构造函数\r\nfunction Vue(options){\r\n    console.log(options)\r\n    this._init(options)//当用户new Vue时就调用init方法进行vue的初始化方法\r\n}\r\n\r\n//Vue初始化  扩展原型方法\r\n//可以拆分逻辑到不同的文件中 更利于代码维护  模块化的概念\r\n\r\ninitMixin(Vue);//初始化混合\r\n\r\n// Vue.prototype._init = function (options) {\r\n    \r\n// };\r\n\r\n\r\n\r\nexport default Vue\r\n\r\n\r\n//库->rollup   项目开发->webpack"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","obj","value","split","forEach","item","key","JSON","stringify","slice","genChildren","AST","children","map","child","gen","join","node","console","log","type","generate","text","test","tokens","match","index","lastIndex","exec","push","trim","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createASTElement","parent","root","currentParent","stack","start","tagName","element","end","pop","chars","replace","advance","n","substring","parseStartTag","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunctions","template","render","fn","Function","oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","args","result","call","inserted","ob","__ob__","observeArray","Observer","defineProperty","enumerable","configurable","isArray","setPrototypeOf","walk","observe","data","keys","defineReactive","get","set","newValue","__obj__","initState","vm","opts","$options","initData","proxy","source","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","outerHTML"],"mappings":"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"}